/* tslint:disable */
/* eslint-disable */
/**
 * Feedreader
 * Feedreader
 *
 * The version of the OpenAPI document: 1.28.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { OutlineFeed } from "./OutlineFeed";
import {
  OutlineFeedFromJSON,
  OutlineFeedFromJSONTyped,
  OutlineFeedToJSON,
} from "./OutlineFeed";

/**
 *
 * @export
 * @interface Outline
 */
export interface Outline {
  /**
   *
   * @type {number}
   * @memberof Outline
   */
  readonly id?: number;
  /**
   *
   * @type {string}
   * @memberof Outline
   */
  title: string;
  /**
   *
   * @type {OutlineFeed}
   * @memberof Outline
   */
  feed?: OutlineFeed;
  /**
   *
   * @type {boolean}
   * @memberof Outline
   */
  sort_order_asc?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Outline
   */
  show_only_new?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Outline
   */
  folder_opened?: boolean;
  /**
   *
   * @type {number}
   * @memberof Outline
   */
  unread_count?: number;
  /**
   *
   * @type {Array<Outline>}
   * @memberof Outline
   */
  children: Array<Outline>;
}

/**
 * Check if a given object implements the Outline interface.
 */
export function instanceOfOutline(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "title" in value;
  isInstance = isInstance && "children" in value;

  return isInstance;
}

export function OutlineFromJSON(json: any): Outline {
  return OutlineFromJSONTyped(json, false);
}

export function OutlineFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Outline {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    title: json["title"],
    feed: !exists(json, "feed") ? undefined : OutlineFeedFromJSON(json["feed"]),
    sort_order_asc: !exists(json, "sort_order_asc")
      ? undefined
      : json["sort_order_asc"],
    show_only_new: !exists(json, "show_only_new")
      ? undefined
      : json["show_only_new"],
    folder_opened: !exists(json, "folder_opened")
      ? undefined
      : json["folder_opened"],
    unread_count: !exists(json, "unread_count")
      ? undefined
      : json["unread_count"],
    children: (json["children"] as Array<any>).map(OutlineFromJSON),
  };
}

export function OutlineToJSON(value?: Outline | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    title: value.title,
    feed: OutlineFeedToJSON(value.feed),
    sort_order_asc: value.sort_order_asc,
    show_only_new: value.show_only_new,
    folder_opened: value.folder_opened,
    unread_count: value.unread_count,
    children: (value.children as Array<any>).map(OutlineToJSON),
  };
}
